---
layout: post
title:  "HAL 9000: (Gradient)Descent into (March)Madness Part 3a: "
date:   2024-06-15 16:37:09 -0400
categories: [sports]
---

<p align="center">
  <img src="/assets/hal/halscreenshot.png">
</p>

Leveraging Machine Learning for Strategic Advantage in March Madness Predictions (Not responsible for broken relationships due to bracket challenge dominance)

## Introduction

Before diving into machine learning, performing Exploratory Data Analysis (EDA) is crucial to ensure the reliability and effectiveness of any model. Things such as missing values, outliers, and even non-normalized data can completely throw off the accuracy of a model. Additionally understanding the data is cruical to sleceting which model to use. 

# Understanding Neural Networks and Proximal Policy Optimization

*A guide for data-driven professionals without a heavy math background*

## Neural Networks: The Basics

Neural networks are powerful machine learning models inspired by the human brain. They excel at finding patterns in data and making predictions. Here's what you need to know:

### Key Components:

1. **Nodes**: Like neurons in the brain, they process and transmit information.
2. **Layers**: Groups of nodes that process data at different levels.
3. **Weights**: Determine the strength of connections between nodes.
4. **Activation Functions**: Decide whether and how strongly a node "fires."

The network learns by adjusting these weights based on the difference between its predictions and the actual results. This process, repeated many times with lots of data, allows the network to improve its accuracy.

<p align="center">
  <img src="/assets/hal/nndiagram.png">
</p>

### How Neural Networks Work

1. **Input Layer**: This is where you feed in your data. Each input represents a feature of your data.
2. **Hidden Layers**: These layers process the information. They take inputs, apply weights to them, and pass the results to the next layer.
3. **Output Layer**: This layer provides the final result, whether it's a classification, prediction, or decision.
4. **Learning Process**: The network "learns" by adjusting the weights between nodes. It compares its output to the correct answer and tweaks the weights to get closer to the right result.


### Forward Propigation
<p align="center">
  <img src="/assets/hal/nnwithnumbers.png">
</p>

### Backward Propigation





